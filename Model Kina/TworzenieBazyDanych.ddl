-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-12-31 11:55:41 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE cinema (
    cinema_id       INTEGER NOT NULL,
    cinema_name     CHAR(40) NOT NULL,
    cinema_street   CHAR(60) NOT NULL,
    building_number CHAR(5) NOT NULL,
    city_city_id    INTEGER NOT NULL
);

ALTER TABLE cinema ADD CONSTRAINT cinema_pk PRIMARY KEY ( cinema_id );

CREATE TABLE city (
    city_id          INTEGER NOT NULL,
    city_name        CHAR(30) NOT NULL,
    zip_code         CHAR(5) NOT NULL,
    region_region_id INTEGER NOT NULL
);

ALTER TABLE city ADD CONSTRAINT city_pk PRIMARY KEY ( city_id );

CREATE TABLE client (
    client_id                INTEGER NOT NULL,
    favourite_movie_genre_id INTEGER,
    name                     CHAR(50),
    surname                  CHAR(50),
    email                    CHAR(40),
    telephone_number         CHAR(9),
    password                 CHAR(30),
    birth_date               DATE,
    default_cinema_cinema_id INTEGER NOT NULL
);

ALTER TABLE client ADD CONSTRAINT client_pk PRIMARY KEY ( client_id );

CREATE TABLE default_cinema (
    cinema_id                  INTEGER NOT NULL,
    date_of_setting_as_default DATE NOT NULL
);

ALTER TABLE default_cinema ADD CONSTRAINT default_cinema_pk PRIMARY KEY ( cinema_id );

CREATE TABLE employee (
    employee_id      INTEGER NOT NULL,
    name             CHAR(50) NOT NULL,
    surname          CHAR(50) NOT NULL,
    pesel            CHAR(11) NOT NULL,
    position         CHAR(20) NOT NULL,
    worktime         INTEGER NOT NULL,
    payment_per_hour FLOAT NOT NULL,
    cinema_cinema_id INTEGER NOT NULL
);

ALTER TABLE employee ADD CONSTRAINT employee_pk PRIMARY KEY ( employee_id );

CREATE TABLE feedback (
    feedback_id         INTEGER NOT NULL,
    date_of_publication DATE NOT NULL,
    rating              INTEGER NOT NULL,
    "Comment"           CHAR(5000),
    cinema_cinema_id    INTEGER,
    client_client_id    INTEGER
);

ALTER TABLE feedback ADD CONSTRAINT feedback_pk PRIMARY KEY ( feedback_id );

CREATE TABLE monthly_raport (
    raport_id               INTEGER NOT NULL,
    year                    INTEGER NOT NULL,
    month                   CHAR(20) NOT NULL,
    monthly_income_amount   FLOAT NOT NULL,
    tax_amount              FLOAT NOT NULL,
    monthly_expenses_amount FLOAT NOT NULL,
    final_income_amount     FLOAT NOT NULL,
    cinema_cinema_id        INTEGER NOT NULL
);

ALTER TABLE monthly_raport ADD CONSTRAINT monthly_raport_pk PRIMARY KEY ( raport_id );

CREATE TABLE movie (
    movie_id              INTEGER NOT NULL,
    movie_title           CHAR(30) NOT NULL,
    release_date          DATE NOT NULL,
    duration_of_the_movie INTEGER NOT NULL,
    distributor_name      CHAR(50) NOT NULL,
    age_limit             INTEGER NOT NULL
);

ALTER TABLE movie ADD CONSTRAINT movie_pk PRIMARY KEY ( movie_id );

CREATE TABLE movie_genre (
    genre_id   INTEGER NOT NULL,
    genre_name CHAR(30) NOT NULL
);

ALTER TABLE movie_genre ADD CONSTRAINT movie_genre_pk PRIMARY KEY ( genre_id );

CREATE TABLE offer (
    offer_id                    INTEGER NOT NULL,
    offer_name                  CHAR(20) NOT NULL,
    offer_description           CHAR(300) NOT NULL,
    amount_to_pay               FLOAT NOT NULL,
    beginning_date_of_the_offer DATE NOT NULL,
    end_date_of_the_offer       DATE NOT NULL
);

ALTER TABLE offer ADD CONSTRAINT offer_pk PRIMARY KEY ( offer_id );

CREATE TABLE order_detail (
    order_detail_id          INTEGER NOT NULL,
    unit_price               FLOAT NOT NULL,
    quantity                 INTEGER NOT NULL,
    unit_discount_price      FLOAT,
    unit_final_price         FLOAT NOT NULL,
    unit_tax_amount          FLOAT NOT NULL,
    order_header_order_id    INTEGER NOT NULL,
    monthly_raport_raport_id INTEGER NOT NULL
);

ALTER TABLE order_detail ADD CONSTRAINT order_detail_pk PRIMARY KEY ( order_detail_id );

CREATE TABLE order_header (
    order_id              INTEGER NOT NULL,
    final_price           FLOAT NOT NULL,
    order_date            DATE NOT NULL,
    realization_date      DATE NOT NULL,
    final_discount_amount FLOAT,
    client_client_id      INTEGER
);

ALTER TABLE order_header ADD CONSTRAINT order_header_pk PRIMARY KEY ( order_id );

CREATE TABLE products (
    product_id     INTEGER NOT NULL,
    product_name   CHAR(20) NOT NULL,
    official_price FLOAT NOT NULL
);

ALTER TABLE products ADD CONSTRAINT products_pk PRIMARY KEY ( product_id );

CREATE TABLE products_in_cinema (
    product_in_cinema_id     INTEGER NOT NULL,
    number_of_products       INTEGER NOT NULL,
    expiration_date          DATE,
    discount_amount          FLOAT,
    discount_percentage      INTEGER,
    unit_expense             FLOAT NOT NULL,
    tax_amount               FLOAT NOT NULL,
    tax_percentage           INTEGER NOT NULL,
    cinema_cinema_id         INTEGER,
    products_product_id      INTEGER NOT NULL,
    monthly_raport_raport_id INTEGER NOT NULL
);

ALTER TABLE products_in_cinema ADD CONSTRAINT products_in_cinema_pk PRIMARY KEY ( product_in_cinema_id );

CREATE TABLE region (
    region_id   INTEGER NOT NULL,
    region_name CHAR(20) NOT NULL
);

ALTER TABLE region ADD CONSTRAINT region_pk PRIMARY KEY ( region_id );

CREATE TABLE relation_32 (
    sales_channel_channel_id INTEGER NOT NULL,
    order_header_order_id    INTEGER NOT NULL
);

ALTER TABLE relation_32 ADD CONSTRAINT relation_32_pk PRIMARY KEY ( sales_channel_channel_id,
                                                                    order_header_order_id );

CREATE TABLE relation_38 (
    offer_offer_id                          INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    products_in_cinema_product_in_cinema_id INTEGER NOT NULL
);

ALTER TABLE relation_38 ADD CONSTRAINT relation_38_pk PRIMARY KEY ( offer_offer_id,
                                                                    products_in_cinema_product_in_cinema_id );

CREATE TABLE relation_39 (
    offer_offer_id               INTEGER NOT NULL,
    order_detail_order_detail_id INTEGER NOT NULL
);

ALTER TABLE relation_39 ADD CONSTRAINT relation_39_pk PRIMARY KEY ( offer_offer_id,
                                                                    order_detail_order_detail_id );

CREATE TABLE relation_40 (
    cinema_cinema_id         INTEGER NOT NULL,
    default_cinema_cinema_id INTEGER NOT NULL
);

ALTER TABLE relation_40 ADD CONSTRAINT relation_40_pk PRIMARY KEY ( cinema_cinema_id,
                                                                    default_cinema_cinema_id );

CREATE TABLE relation_42 (
    movie_movie_id       INTEGER NOT NULL,
    movie_genre_genre_id INTEGER NOT NULL
);

ALTER TABLE relation_42 ADD CONSTRAINT relation_42_pk PRIMARY KEY ( movie_movie_id,
                                                                    movie_genre_genre_id );

CREATE TABLE relation_44 (
    movie_genre_genre_id INTEGER NOT NULL,
    client_client_id     INTEGER NOT NULL
);

ALTER TABLE relation_44 ADD CONSTRAINT relation_44_pk PRIMARY KEY ( movie_genre_genre_id,
                                                                    client_client_id );

CREATE TABLE relation_45 (
    ticket_ticket_id INTEGER NOT NULL,
    offer_offer_id   INTEGER NOT NULL
);

ALTER TABLE relation_45 ADD CONSTRAINT relation_45_pk PRIMARY KEY ( ticket_ticket_id,
                                                                    offer_offer_id );

CREATE TABLE relation_7 (
    movie_movie_id   INTEGER NOT NULL,
    seance_seance_id INTEGER NOT NULL
);

ALTER TABLE relation_7 ADD CONSTRAINT relation_7_pk PRIMARY KEY ( movie_movie_id,
                                                                  seance_seance_id );

CREATE TABLE repertoire (
    repertoire_id    INTEGER NOT NULL,
    beginning_date   DATE NOT NULL,
    end_date         DATE NOT NULL,
    cinema_cinema_id INTEGER NOT NULL
);

ALTER TABLE repertoire ADD CONSTRAINT repertoire_pk PRIMARY KEY ( repertoire_id );

CREATE TABLE room (
    room_id          INTEGER NOT NULL,
    room_number      INTEGER NOT NULL,
    room_type        CHAR(60) NOT NULL,
    cinema_cinema_id INTEGER NOT NULL
);

ALTER TABLE room ADD CONSTRAINT room_pk PRIMARY KEY ( room_id );

CREATE TABLE sales_channel (
    channel_id       INTEGER NOT NULL,
    channel_name     CHAR(30) NOT NULL,
    cinema_cinema_id INTEGER NOT NULL
);

ALTER TABLE sales_channel ADD CONSTRAINT sales_channel_pk PRIMARY KEY ( channel_id );

CREATE TABLE sceance_audio_type (
    audio_type_id INTEGER NOT NULL,
    audio_type    CHAR(10) NOT NULL,
    language      CHAR(20) NOT NULL
);

ALTER TABLE sceance_audio_type ADD CONSTRAINT sceance_audio_type_pk PRIMARY KEY ( audio_type_id );

CREATE TABLE seance (
    seance_id                         INTEGER NOT NULL,
    seance_date                       DATE NOT NULL,
    seance_duration                   INTEGER NOT NULL,
    is_a_marathon                     CHAR(1) NOT NULL,
    repertoire_repertoire_id          INTEGER NOT NULL,
    room_room_id                      INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    seance_visual_type_visual_type_id INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    sceance_audio_type_audio_type_id  INTEGER NOT NULL
);

ALTER TABLE seance ADD CONSTRAINT seance_pk PRIMARY KEY ( seance_id );

CREATE TABLE seance_visual_type (
    visual_type_id INTEGER NOT NULL,
    visual_type    CHAR(30) NOT NULL,
    ticket_price   FLOAT NOT NULL
);

ALTER TABLE seance_visual_type ADD CONSTRAINT seance_visual_type_pk PRIMARY KEY ( visual_type_id );

CREATE TABLE ticket (
    ticket_id                  INTEGER NOT NULL,
    official_price             FLOAT NOT NULL,
    row_number                 INTEGER NOT NULL,
    seat_number                INTEGER NOT NULL,
    service_payment            FLOAT,
    transactional_price        FLOAT NOT NULL,
    ticket_type_ticket_type_id INTEGER NOT NULL,
    seance_seance_id           INTEGER NOT NULL
);

ALTER TABLE ticket ADD CONSTRAINT ticket_pk PRIMARY KEY ( ticket_id );

CREATE TABLE ticket_type (
    ticket_type_id         INTEGER NOT NULL,
    type_name              CHAR(20) NOT NULL,
    percentage_of_discount INTEGER NOT NULL
);

ALTER TABLE ticket_type ADD CONSTRAINT ticket_type_pk PRIMARY KEY ( ticket_type_id );

ALTER TABLE cinema
    ADD CONSTRAINT cinema_city_fk FOREIGN KEY ( city_city_id )
        REFERENCES city ( city_id );

ALTER TABLE city
    ADD CONSTRAINT city_region_fk FOREIGN KEY ( region_region_id )
        REFERENCES region ( region_id );

ALTER TABLE client
    ADD CONSTRAINT client_default_cinema_fk FOREIGN KEY ( default_cinema_cinema_id )
        REFERENCES default_cinema ( cinema_id );

ALTER TABLE employee
    ADD CONSTRAINT employee_cinema_fk FOREIGN KEY ( cinema_cinema_id )
        REFERENCES cinema ( cinema_id );

ALTER TABLE feedback
    ADD CONSTRAINT feedback_cinema_fk FOREIGN KEY ( cinema_cinema_id )
        REFERENCES cinema ( cinema_id );

ALTER TABLE feedback
    ADD CONSTRAINT feedback_client_fk FOREIGN KEY ( client_client_id )
        REFERENCES client ( client_id );

ALTER TABLE monthly_raport
    ADD CONSTRAINT monthly_raport_cinema_fk FOREIGN KEY ( cinema_cinema_id )
        REFERENCES cinema ( cinema_id );

ALTER TABLE order_detail
    ADD CONSTRAINT order_detail_monthly_raport_fk FOREIGN KEY ( monthly_raport_raport_id )
        REFERENCES monthly_raport ( raport_id );

ALTER TABLE order_detail
    ADD CONSTRAINT order_detail_order_header_fk FOREIGN KEY ( order_header_order_id )
        REFERENCES order_header ( order_id );

ALTER TABLE order_header
    ADD CONSTRAINT order_header_client_fk FOREIGN KEY ( client_client_id )
        REFERENCES client ( client_id );

ALTER TABLE products_in_cinema
    ADD CONSTRAINT products_in_cinema_cinema_fk FOREIGN KEY ( cinema_cinema_id )
        REFERENCES cinema ( cinema_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE products_in_cinema
    ADD CONSTRAINT products_in_cinema_monthly_raport_fk FOREIGN KEY ( monthly_raport_raport_id )
        REFERENCES monthly_raport ( raport_id );

ALTER TABLE products_in_cinema
    ADD CONSTRAINT products_in_cinema_products_fk FOREIGN KEY ( products_product_id )
        REFERENCES products ( product_id );

ALTER TABLE relation_32
    ADD CONSTRAINT relation_32_order_header_fk FOREIGN KEY ( order_header_order_id )
        REFERENCES order_header ( order_id );

ALTER TABLE relation_32
    ADD CONSTRAINT relation_32_sales_channel_fk FOREIGN KEY ( sales_channel_channel_id )
        REFERENCES sales_channel ( channel_id );

ALTER TABLE relation_38
    ADD CONSTRAINT relation_38_offer_fk FOREIGN KEY ( offer_offer_id )
        REFERENCES offer ( offer_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE relation_38
    ADD CONSTRAINT relation_38_products_in_cinema_fk FOREIGN KEY ( products_in_cinema_product_in_cinema_id )
        REFERENCES products_in_cinema ( product_in_cinema_id );

ALTER TABLE relation_39
    ADD CONSTRAINT relation_39_offer_fk FOREIGN KEY ( offer_offer_id )
        REFERENCES offer ( offer_id );

ALTER TABLE relation_39
    ADD CONSTRAINT relation_39_order_detail_fk FOREIGN KEY ( order_detail_order_detail_id )
        REFERENCES order_detail ( order_detail_id );

ALTER TABLE relation_40
    ADD CONSTRAINT relation_40_cinema_fk FOREIGN KEY ( cinema_cinema_id )
        REFERENCES cinema ( cinema_id );

ALTER TABLE relation_40
    ADD CONSTRAINT relation_40_default_cinema_fk FOREIGN KEY ( default_cinema_cinema_id )
        REFERENCES default_cinema ( cinema_id );

ALTER TABLE relation_42
    ADD CONSTRAINT relation_42_movie_fk FOREIGN KEY ( movie_movie_id )
        REFERENCES movie ( movie_id );

ALTER TABLE relation_42
    ADD CONSTRAINT relation_42_movie_genre_fk FOREIGN KEY ( movie_genre_genre_id )
        REFERENCES movie_genre ( genre_id );

ALTER TABLE relation_44
    ADD CONSTRAINT relation_44_client_fk FOREIGN KEY ( client_client_id )
        REFERENCES client ( client_id );

ALTER TABLE relation_44
    ADD CONSTRAINT relation_44_movie_genre_fk FOREIGN KEY ( movie_genre_genre_id )
        REFERENCES movie_genre ( genre_id );

ALTER TABLE relation_45
    ADD CONSTRAINT relation_45_offer_fk FOREIGN KEY ( offer_offer_id )
        REFERENCES offer ( offer_id );

ALTER TABLE relation_45
    ADD CONSTRAINT relation_45_ticket_fk FOREIGN KEY ( ticket_ticket_id )
        REFERENCES ticket ( ticket_id );

ALTER TABLE relation_7
    ADD CONSTRAINT relation_7_movie_fk FOREIGN KEY ( movie_movie_id )
        REFERENCES movie ( movie_id );

ALTER TABLE relation_7
    ADD CONSTRAINT relation_7_seance_fk FOREIGN KEY ( seance_seance_id )
        REFERENCES seance ( seance_id );

ALTER TABLE repertoire
    ADD CONSTRAINT repertoire_cinema_fk FOREIGN KEY ( cinema_cinema_id )
        REFERENCES cinema ( cinema_id );

ALTER TABLE room
    ADD CONSTRAINT room_cinema_fk FOREIGN KEY ( cinema_cinema_id )
        REFERENCES cinema ( cinema_id );

ALTER TABLE sales_channel
    ADD CONSTRAINT sales_channel_cinema_fk FOREIGN KEY ( cinema_cinema_id )
        REFERENCES cinema ( cinema_id );

ALTER TABLE seance
    ADD CONSTRAINT seance_repertoire_fk FOREIGN KEY ( repertoire_repertoire_id )
        REFERENCES repertoire ( repertoire_id );

ALTER TABLE seance
    ADD CONSTRAINT seance_room_fk FOREIGN KEY ( room_room_id )
        REFERENCES room ( room_id );

ALTER TABLE seance
    ADD CONSTRAINT seance_sceance_audio_type_fk FOREIGN KEY ( sceance_audio_type_audio_type_id )
        REFERENCES sceance_audio_type ( audio_type_id );

ALTER TABLE seance
    ADD CONSTRAINT seance_seance_visual_type_fk FOREIGN KEY ( seance_visual_type_visual_type_id )
        REFERENCES seance_visual_type ( visual_type_id );

ALTER TABLE ticket
    ADD CONSTRAINT ticket_seance_fk FOREIGN KEY ( seance_seance_id )
        REFERENCES seance ( seance_id );

ALTER TABLE ticket
    ADD CONSTRAINT ticket_ticket_type_fk FOREIGN KEY ( ticket_type_ticket_type_id )
        REFERENCES ticket_type ( ticket_type_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            31
-- CREATE INDEX                             0
-- ALTER TABLE                             69
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   5
-- WARNINGS                                 0
